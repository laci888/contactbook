1
00:00:00,200 --> 00:00:00,500
Хорошо.

2
00:00:00,600 --> 00:00:01,500
Итак, в этом видео,

3
00:00:01,600 --> 00:00:04,800
Я просто хочу быстро показать вам, как работать с событиями клика

4
00:00:04,900 --> 00:00:07,800
потому что события кликов являются одними из самых популярных событий, которые ваши

5
00:00:07,900 --> 00:00:10,500
работать с приложением react.

6
00:00:10,900 --> 00:00:13,800
Все постоянно кликают и что-то делают на сайте, и вы хотите реагировать на

7
00:00:13,900 --> 00:00:14,900
это событие.

8
00:00:15,000 --> 00:00:16,200
Так что это мертвая смерть.

9
00:00:16,300 --> 00:00:17,700
Простое решение в react.

10
00:00:17,800 --> 00:00:19,300
Что я собираюсь сделать, так это создать кнопку.

11
00:00:19,500 --> 00:00:19,800
И кстати,

12
00:00:20,000 --> 00:00:23,000
вы можете заметить, что мы убрали много кода из последней версии.

13
00:00:23,100 --> 00:00:23,500
лекции,

14
00:00:23,600 --> 00:00:26,500
так что у нас нет ни случайного числа, ни даты, ни ссылки и

15
00:00:26,600 --> 00:00:29,800
у нас есть только заголовок и подзаголовок под ними, которые мы создадим.

16
00:00:30,000 --> 00:00:32,200
Эта кнопка и эта кнопка будут говорить,

17
00:00:32,300 --> 00:00:33,100
нажмите на меня.

18
00:00:33,200 --> 00:00:33,500
Сейчас.

19
00:00:33,600 --> 00:00:36,700
Я хочу прикрепить какой-нибудь обработчик щелчков к этому

20
00:00:37,200 --> 00:00:37,600
и сделать это.

21
00:00:37,700 --> 00:00:40,700
Все, что мне нужно сделать, это сказать on, затем нажать и это

22
00:00:40,800 --> 00:00:41,300
это верблюжий корпус.

23
00:00:41,500 --> 00:00:44,500
Итак, клик начинается с заглавной буквы, и это то же самое.

24
00:00:44,600 --> 00:00:47,000
для всех обработчиков событий в будущем.

25
00:00:47,100 --> 00:00:49,600
Если бы у вас было какое-то другое событие, например, двойной щелчок,

26
00:00:49,700 --> 00:00:52,600
оно начиналось бы с on, а затем было бы любым событием.

27
00:00:52,700 --> 00:00:55,600
и мы увидим больше таких событий позже в разделе

28
00:00:55,700 --> 00:00:57,000
пока что.

29
00:00:57,100 --> 00:01:00,100
Давайте остановимся на клике, а затем установим

30
00:01:00,200 --> 00:01:01,200
равным чему-то.

31
00:01:01,500 --> 00:01:01,600
Теперь.

32
00:01:01,700 --> 00:01:04,600
Мы хотим установить его равным чему-то динамическому, потому что мы

33
00:01:04,700 --> 00:01:05,900
хотим запустить функцию,

34
00:01:06,000 --> 00:01:09,700
функцию JavaScript, когда произойдет это событие при нажатии.

35
00:01:10,000 --> 00:01:13,200
Итак, если это что-то динамическое, то это должны быть фигурные скобки.

36
00:01:13,400 --> 00:01:16,800
что мы устанавливаем его равным 0 и затем мы можем создать

37
00:01:16,900 --> 00:01:17,700
функцию здесь.

38
00:01:18,000 --> 00:01:18,700
Прежде всего,

39
00:01:18,700 --> 00:01:19,800
позвольте мне сделать это.

40
00:01:19,900 --> 00:01:21,000
Я назову это ручкой,

41
00:01:21,500 --> 00:01:24,800
щелчком мыши установим его равным функции стрелки и

42
00:01:24,900 --> 00:01:26,900
затем внутри этой функции мы можем что-то сделать.

43
00:01:28,000 --> 00:01:28,100
Хорошо.

44
00:01:28,200 --> 00:01:28,600
И кстати,

45
00:01:28,700 --> 00:01:31,600
это соглашение об именовании, которое вы увидите довольно часто.

46
00:01:31,700 --> 00:01:34,600
в реактивных приложениях, а затем, независимо от

47
00:01:34,700 --> 00:01:35,500
событие.

48
00:01:35,900 --> 00:01:37,200
Так что в этом случае обработайте клик,

49
00:01:37,500 --> 00:01:37,600
но теперь,

50
00:01:37,700 --> 00:01:40,900
что я могу сделать - я могу сослаться на эту функцию прямо здесь

51
00:01:41,200 --> 00:01:43,200
внутри этого клика.

52
00:01:43,700 --> 00:01:44,200
Итак,

53
00:01:44,500 --> 00:01:46,000
если я ссылаюсь на функцию,

54
00:01:46,200 --> 00:01:46,400
это означает,

55
00:01:46,500 --> 00:01:47,900
посмотрите, когда вы нажмете на эту кнопку.

56
00:01:48,000 --> 00:01:49,800
Я хочу, чтобы ты выстрелил этой ручкой,

57
00:01:49,900 --> 00:01:52,800
функцию click, которую мы объявили вне

58
00:01:52,900 --> 00:01:54,000
оператора возврата.

59
00:01:54,000 --> 00:01:54,600
Это важно.

60
00:01:54,700 --> 00:01:56,100
Мы не объявляем функцию,

61
00:01:56,200 --> 00:01:57,700
внутри оператора return.

62
00:01:57,900 --> 00:01:59,900
Это только для самого шаблона.

63
00:02:00,200 --> 00:02:03,100
Любая логика выходит за пределы оператора возврата, например, так

64
00:02:03,200 --> 00:02:04,200
типа функций.

65
00:02:04,700 --> 00:02:05,200
Хорошо.

66
00:02:05,900 --> 00:02:08,800
Теперь мы не будем вызывать его прямо здесь, потому что тогда, что происходит

67
00:02:09,000 --> 00:02:12,300
произойдет, это будет автоматически вызвано, когда

68
00:02:12,400 --> 00:02:15,000
код запускается впервые, потому что он будет слышен.

69
00:02:15,000 --> 00:02:18,000
Оно посмотрит на это и просто вызовет его, потому что это то, что мы делаем.

70
00:02:18,100 --> 00:02:19,500
Мы ставим круглые скобки после него.

71
00:02:19,900 --> 00:02:22,900
Мы просто хотим получить ссылку на функцию, чтобы после щелчка на ней,

72
00:02:23,000 --> 00:02:24,400
затем вызывает его.

73
00:02:24,800 --> 00:02:25,400
Хорошо.

74
00:02:26,000 --> 00:02:28,900
Давайте сделаем что-нибудь внутри этой функции.

75
00:02:29,100 --> 00:02:29,800
Итак, я скажу,

76
00:02:29,900 --> 00:02:30,500
Консоль.лог,

77
00:02:31,800 --> 00:02:34,000
вы нажали на меня вот так.

78
00:02:35,000 --> 00:02:35,500
Хорошо,

79
00:02:35,600 --> 00:02:38,800
и также мы можем получить доступ к этим различным переменным

80
00:02:38,900 --> 00:02:40,300
или константам, которые находятся здесь же.

81
00:02:40,500 --> 00:02:43,300
Поэтому я могу сказать console.log и

82
00:02:43,500 --> 00:02:46,400
Я скажу, что название сайта и

83
00:02:46,500 --> 00:02:48,000
затем двоеточие и после него запятая,

84
00:02:48,100 --> 00:02:49,500
для динамического вывода,

85
00:02:49,900 --> 00:02:51,400
название следующим образом.

86
00:02:52,000 --> 00:02:52,500
Хорошо,

87
00:02:52,600 --> 00:02:53,700
так что если я сохраню это,

88
00:02:53,800 --> 00:02:54,100
сейчас,

89
00:02:54,300 --> 00:02:56,500
все это должно работать, предварительно просмотрите это в браузере.

90
00:02:57,100 --> 00:02:57,300
Хорошо,

91
00:02:57,500 --> 00:02:58,500
так что мы можем видеть эту кнопку прямо здесь.

92
00:02:58,600 --> 00:02:59,800
Если мы откроем консоль.

93
00:03:00,000 --> 00:03:02,800
Я нажму на это и мы увидим.

94
00:03:02,900 --> 00:03:03,100
Ага,

95
00:03:03,300 --> 00:03:06,000
этот лог в консоль, а также заголовок сайта,

96
00:03:06,100 --> 00:03:07,800
то есть добро пожаловать на мой сайт.

97
00:03:08,000 --> 00:03:10,800
Итак, все это сработало, если нажать на это и

98
00:03:11,000 --> 00:03:12,900
сработала функция обработки клика,

99
00:03:13,000 --> 00:03:14,600
которая записывается в консоль.

100
00:03:15,400 --> 00:03:18,400
Таким образом, мы также получаем доступ к объекту события внутри

101
00:03:18,500 --> 00:03:19,500
этой функции обработчика,

102
00:03:19,800 --> 00:03:22,600
и это для любой функции обработчика для любого события.

103
00:03:22,800 --> 00:03:25,700
Если мы ссылаемся на функцию и реакцию

104
00:03:25,800 --> 00:03:27,300
на какое-то событие,

105
00:03:27,400 --> 00:03:29,800
то мы автоматически получаем доступ к этому событию.

106
00:03:29,900 --> 00:03:32,800
Объект, содержащий информацию об этом событии, который

107
00:03:32,900 --> 00:03:34,300
только что произошло в нашем случае,

108
00:03:34,400 --> 00:03:35,800
это будет событие щелчка.

109
00:03:36,000 --> 00:03:39,500
Поэтому я могу сказать здесь console.log

110
00:03:39,900 --> 00:03:43,000
и мы просто выведем объект события, сохранив это.

111
00:03:43,800 --> 00:03:44,500
А теперь в браузере,

112
00:03:44,600 --> 00:03:45,400
когда я нажимаю на это,

113
00:03:45,500 --> 00:03:47,800
мы можем увидеть и этот объект события.

114
00:03:48,000 --> 00:03:48,900
Если мы расширим это,

115
00:03:49,000 --> 00:03:51,000
там будет много информации об этом событии,

116
00:03:51,100 --> 00:03:52,300
множество различных свойств,

117
00:03:52,500 --> 00:03:54,300
свойства клиента X и Y.

118
00:03:54,500 --> 00:03:57,300
Была ли нажата управляющая клавиша или нет,

119
00:03:57,500 --> 00:03:59,800
а не какие-либо свойства движения.

120
00:04:00,000 --> 00:04:01,300
Следующий экран белый Etc.

121
00:04:01,500 --> 00:04:04,500
Таким образом, вы можете использовать всю эту информацию в вашем JavaScript

122
00:04:04,600 --> 00:04:06,800
функции о событии, если вы этого захотите.

123
00:04:07,400 --> 00:04:07,400
Сейчас,

124
00:04:07,500 --> 00:04:10,400
Еще одна вещь, которую я хотел показать вам, которую вы будете видеть довольно часто в реакциях

125
00:04:10,500 --> 00:04:13,000
приложениях, это как использовать встроенные функции,

126
00:04:13,300 --> 00:04:16,500
вместо функций, которые объявляются здесь, вне шаблона.

127
00:04:16,600 --> 00:04:17,700
Позвольте мне прокомментировать это.

128
00:04:17,800 --> 00:04:18,600
И для этого

129
00:04:18,600 --> 00:04:19,300
выделите все это,

130
00:04:19,500 --> 00:04:21,100
затем control и прямая косая черта.

131
00:04:21,500 --> 00:04:22,200
А затем вниз.

132
00:04:22,300 --> 00:04:23,600
Позвольте мне удалить эту ссылку.

133
00:04:23,800 --> 00:04:27,200
И вместо этого мы передадим встроенную функцию в

134
00:04:27,300 --> 00:04:28,300
напрямую.

135
00:04:28,600 --> 00:04:30,800
Таким образом, это просто нормальная функция ошибки,

136
00:04:31,000 --> 00:04:31,200
верно?

137
00:04:31,300 --> 00:04:32,300
Это соответствует.

138
00:04:32,600 --> 00:04:35,500
Перед ним нет имени функции или чего-то подобного,

139
00:04:35,600 --> 00:04:37,000
но это просто функция ошибки,

140
00:04:37,100 --> 00:04:38,800
скобки для любых аргументов,

141
00:04:39,100 --> 00:04:42,000
затем стрелка и затем блок кода прямо здесь.

142
00:04:42,100 --> 00:04:42,000
Теперь,

143
00:04:42,100 --> 00:04:43,500
мы не вызываем эту функцию.

144
00:04:43,800 --> 00:04:44,300
Это снова,

145
00:04:44,500 --> 00:04:47,500
это просто ссылка на функцию, и она собирается запустить эту функцию

146
00:04:47,600 --> 00:04:49,500
всякий раз, когда мы нажимаем на эту кнопку.

147
00:04:49,800 --> 00:04:50,800
Итак, внутри этих

148
00:04:51,000 --> 00:04:52,300
я могу сделать кое-что сейчас,

149
00:04:52,500 --> 00:04:55,800
Я могу сказать console.log и вывести что-нибудь.

150
00:04:56,300 --> 00:04:58,800
Так что я могу сказать hello и просто выйти из системы.

151
00:04:59,000 --> 00:04:59,300
Здравствуйте.

152
00:05:00,000 --> 00:05:02,700
Что если я хочу получить доступ к объекту события?

153
00:05:02,800 --> 00:05:05,500
Ну просто как эта функция здесь,

154
00:05:05,600 --> 00:05:07,500
получила доступ к объекту события.

155
00:05:07,600 --> 00:05:10,800
Эта функция также получает доступ к объекту события

156
00:05:10,800 --> 00:05:13,700
поэтому я могу вывести его также прямо здесь и

157
00:05:13,800 --> 00:05:14,600
это будет работать.

158
00:05:15,300 --> 00:05:18,600
В большинстве случаев, если это всего лишь одна строка кода, как здесь.

159
00:05:18,800 --> 00:05:21,700
Я делаю так: возвращаю это обратно и располагаю это на

160
00:05:21,800 --> 00:05:24,800
на этой линии или прямо здесь, вот так

161
00:05:25,100 --> 00:05:26,500
и потому что это тоже одна строка.

162
00:05:26,600 --> 00:05:29,100
Технически нам не нужны эти фигурные скобки.

163
00:05:29,300 --> 00:05:30,800
Мы можем просто убрать их.

164
00:05:31,100 --> 00:05:34,000
И это работает точно так же, и это

165
00:05:34,100 --> 00:05:35,000
вот такая схема,

166
00:05:35,100 --> 00:05:36,600
можно встретить довольно часто.

167
00:05:36,800 --> 00:05:39,500
Когда у нас есть события щелчка в шаблоне,

168
00:05:39,600 --> 00:05:42,100
просто встроенная функция без фигурных скобок,

169
00:05:42,300 --> 00:05:44,500
которая возвращает одну строку кода.

170
00:05:44,600 --> 00:05:45,300
Хорошо.

171
00:05:45,500 --> 00:05:48,500
Давайте попробуем это в браузере.

172
00:05:49,600 --> 00:05:50,500
Теперь, если мы нажмем на это,

173
00:05:50,600 --> 00:05:53,800
мы должны увидеть объект события, что мы и делаем.

174
00:05:54,000 --> 00:05:54,500
Замечательно.

175
00:05:55,000 --> 00:05:55,000
Итак,

176
00:05:55,100 --> 00:05:55,500
вот так.

177
00:05:55,600 --> 00:05:56,200
Мои друзья.

178
00:05:56,300 --> 00:05:57,200
Вот с чем мы можем работать.

179
00:05:57,300 --> 00:05:59,800
Снова щелкните события в компоненте react.

180
00:05:59,800 --> 00:06:02,700
Затем мы увидим гораздо больше этих и других событий, поскольку мы

181
00:06:02,800 --> 00:06:03,300
вперед.

182
00:06:03,500 --> 00:06:06,500
Это было своего рода вводное видео для них.

